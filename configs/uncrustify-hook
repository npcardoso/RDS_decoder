#!/bin/sh
#
# Hook used to indent all source files before commiting
#

INDENT=`type uncrustify | grep is | sed 's/.*is *//'`
CONF_PATH=configs/uncrustify.conf
if [[ ! -x "$INDENT" ]]; then
	echo "Unable to find indent executable."
fi

# indent / format file by type
indent() {
	# getting against as the current commit
	if git rev-parse --verify HEAD >/dev/null 2>&1
	then
		local against=HEAD
	else
		# Initial commit: diff against an empty tree object
		local against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
	fi

	# loop on modified files
	git diff --cached --name-only $against |while read file;
	do
		local ext=`echo "$file" | sed 's/.*\././'`
		case $ext in
		    .c|.h|.cpp|.hpp)
			__indent_C;
		        ;;
		    .java)
			__indent_C;
		        ;;
		esac
	done
}

# Indent the file with `indent' if this is a C/H file
__indent_C() {
    if [[ -f $file ]]; then
	    echo "Indenting " $file
	    "$INDENT" -c $CONF_PATH --no-backup "$file"
	    git add "$file"
    else
        echo "Ignoring" $file
    fi
}

GIT_ROOT=$(git rev-parse --show-cdup )
[[ ! -z $GIT_ROOT ]] && cd $GIT_ROOT
indent
